
Videos:

    The video password is: Faraday15

     I. Paramiko Part1
        video https://vimeo.com/137421584
        Length is 5 minutes

    II. Paramiko Part2
        video https://vimeo.com/137423157
        Length is 11 minutes

   III. Paramiko Part3
        video https://vimeo.com/137423937
        Length is 7 minutes

   IV. Pexpect
        video https://vimeo.com/137430617
        Length is 15 minutes

    V. Netmiko
        video https://vimeo.com/137432446
        Length is 16 minutes




Errata and Other Info:

1. On the Paramiko connect() method, I forgot to explain the 'look_for_keys=False' and 'allow_agent=False' arguments.

By default, Paramiko will try to use your SSH keys for authentication (for example, id_rsa or id_dsa). In fact, if either of these keys exist, Paramiko will ignore the username/password and only try key-based authentication. The 'look_for_keys=False' argument changes this behavior and tells Paramiko to ignore the SSH keys (i.e. to use the username and password instead).

Similarly, Paramiko will try to use an SSH forwarding agent, if present. The 'allow_agent=False' argument instructs Paramiko not to do this.


2. Pexpect regular expressions are not greedy (i.e. they do not do perform a longest match). This can cause the regular expression behavior to be different than you might otherwise expect.


3. In the Netmiko video (at 1:43), I define a secret in the juniper_srx dictionary. This 'secret' was just to show that you can pass an enable secret into the Netmiko connection. Unfortunately, it doesn't make sense for me to do this for Juniper (Netmiko doesn't do anything with the 'secret' argument for Juniper). For Cisco IOS devices (and certain other vendors/platforms) you can use the 'secret' argument so that you can properly enter into enable mode.


4. Netmiko supports a method (send_config_from_file) that allows you to execute configuration commands directly from a file. For example, if you had a set of commands in a file called 'config_file.txt', then you could execute those commands via the SSH channel as follows:

             net_connect.send_config_from_file(config_file='config_file.txt')




Additional Content You May Be Interested In:

Netmiko on GitHub

Netmiko Examples

Netmiko base_connection.py  (shows low-level detail of how Netmiko uses the Paramiko library)

Python, Paramiko SSH, and Network Devices




Exercises:

My solutions to these exercises are posted at:
https://github.com/ktbyers/pynet/tree/master/pyth_ans_ecourse/class4


The username and password for pynet-rtr1, pynet-rtr2, and for the juniper-srx are:

username: pyclass
password: 88newclass



1. Use Paramiko to retrieve the entire 'show version' output from pynet-rtr2.


2. Use Paramiko to change the 'logging buffered <size>' configuration on pynet-rtr2. This will require that you enter into configuration mode.


3. Use Pexpect to retrieve the output of 'show ip int brief' from pynet-rtr2.


4. Use PExpect to change the logging buffer size (logging buffered <size>) on pynet-rtr2. Verify this change by examining the output of 'show run'.


5. Use Netmiko to enter into configuration mode on pynet-rtr2. Also use Netmiko to verify your state (i.e. that you are currently in configuration mode).


6. Use Netmiko to execute 'show arp' on pynet-rtr1, pynet-rtr2, and juniper-srx.


7. Use Netmiko to change the logging buffer size (logging buffered <size>) on pynet-rtr2.


8. Use Netmiko to change the logging buffer size (logging buffered <size>) and to disable console logging (no logging console) from a file on both pynet-rtr1 and pynet-rtr2 (see 'Errata and Other Info, item #4).


9. Bonus Question - Redo exercise6 but have the SSH connections happen concurrently using either threads or processes (see example). What main issue is there with using threads in Python?
